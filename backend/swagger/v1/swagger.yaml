---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/sign_in":
    post:
      summary: sign in user
      tags:
      - Authentication
      description: Authenticate user and create session
      parameters: []
      responses:
        '200':
          description: successful authentication
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LoginResponse"
        '401':
          description: invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                    - Invalid email or password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      example: user@example.com
                    password:
                      type: string
                      example: password123
                  required:
                  - email
                  - password
              required:
              - user
  "/sign_out":
    delete:
      summary: sign out user
      tags:
      - Authentication
      description: Destroy user session
      responses:
        '200':
          description: successful logout
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Logged out successfully
  "/":
    get:
      summary: show dashboard
      tags:
      - Dashboard
      description: Retrieve dashboard data including active employments, shifts, total
        weekly hours, and current shifts
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  shifts:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Shift"
                  active_employments:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Employment"
                  total_weekly_hours:
                    type: object
                    description: Object where each key is an employment ID (as a string)
                      and each value is the total hours worked that week (float).
                    additionalProperties:
                      type: number
                      format: float
                      example: 38.5
                  current_shifts:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Shift"
                required:
                - shifts
                - active_employments
                - total_weekly_hours
                - current_shifts
components:
  schemas:
    Company:
      type: object
      properties:
        id:
          type: integer
          example: 34
        name:
          type: string
          example: Predovic-Ryan
        description:
          type: string
          example: Adaptive optimal conglomeration
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - id
      - name
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        first_name:
          type: string
          example: Van
        last_name:
          type: string
          example: Zboncak
        username:
          type: string
          example: emile_windler
        email:
          type: string
          example: amiee_toy@schmidt.test
        name:
          type: string
          example: Eulah Effertz
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - id
      - first_name
      - last_name
      - username
      - email
    AuthenticatedUser:
      type: object
      properties:
        id:
          type: integer
          example: 1
        email:
          type: string
          example: mao.bernhard@farrell.test
        first_name:
          type: string
          example: Del
        last_name:
          type: string
          example: Mraz
        username:
          type: string
          example: sabra
      required:
      - id
      - email
    Employment:
      type: object
      properties:
        id:
          type: integer
          example: 57
        user_id:
          type: integer
          example: 32
        position_id:
          type: integer
          example: 27
        start_date:
          type: string
          format: date
          example: '2025-05-23'
        end_date:
          type: string
          format: date
          example: '2025-07-07'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - id
      - user_id
      - position_id
      - start_date
    Position:
      type: object
      properties:
        id:
          type: integer
          example: 81
        title:
          type: string
          example: Future Consulting Supervisor
        description:
          type: string
          example: Devolved local conglomeration
        company_id:
          type: integer
          example: 85
        remote:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - id
      - title
      - company_id
    Shift:
      type: object
      properties:
        id:
          type: integer
          example: 89
        employment_id:
          type: integer
          example: 56
        date:
          type: string
          format: date
          example: '2025-05-22'
        start_time:
          type: string
          format: date-time
          example: '2025-06-11 19:42:45 -0400'
        end_time:
          type: string
          format: date-time
          example: '2025-05-22 18:30:04 -0400'
        hours:
          type: number
          format: float
          example: 6.78
        active:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - id
      - employment_id
      - date
      - start_time
    UserCreateRequest:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        username:
          type: string
        email:
          type: string
        password:
          type: string
        password_confirmation:
          type: string
      required:
      - first_name
      - last_name
      - username
      - email
      - password
      - password_confirmation
    UserUpdateRequest:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        username:
          type: string
        email:
          type: string
        password:
          type: string
        password_confirmation:
          type: string
      required: []
    LoginResponse:
      type: object
      properties:
        user:
          "$ref": "#/components/schemas/AuthenticatedUser"
      required:
      - user
    CreateComponyRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      required:
      - name
    UpdateCompanyRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      required: []
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
