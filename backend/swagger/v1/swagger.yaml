---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/sign_in":
    post:
      summary: sign in user
      tags:
      - Authentication
      description: Authenticate user and create session
      parameters: []
      responses:
        '200':
          description: successful authentication
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LoginResponse"
        '401':
          description: invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                    - Invalid email or password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      example: user@example.com
                    password:
                      type: string
                      example: password123
                  required:
                  - email
                  - password
              required:
              - user
  "/sign_out":
    delete:
      summary: sign out user
      tags:
      - Authentication
      description: Destroy user session
      responses:
        '200':
          description: successful logout
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Logged out successfully
  "/":
    get:
      summary: show dashboard
      tags:
      - Dashboard
      description: Retrieve dashboard data including active employments, shifts, total
        weekly hours, and current shifts
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  shifts:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Shift"
                  active_employments:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Employment"
                  total_weekly_hours:
                    type: object
                    description: Object where each key is an employment ID (as a string)
                      and each value is the total hours worked that week (float).
                    additionalProperties:
                      type: number
                      format: float
                      example: 38.5
                  current_shifts:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Shift"
                required:
                - shifts
                - active_employments
                - total_weekly_hours
                - current_shifts
  "/employments/{id}/clock_in":
    post:
      summary: clock in employment
      tags:
      - Employments
      description: Clock in for a specific employment
      parameters:
      - name: id
        in: path
        description: Employment ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful clock in
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Shift"
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: string
                    example: Already clocked in for this employment
        '401':
          description: unauthorized
  "/employments/{id}/clock_out":
    post:
      summary: clock out employment
      tags:
      - Employments
      description: Clock out for a specific employment
      parameters:
      - name: id
        in: path
        description: Employment ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful clock out
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Shift"
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: string
                    example: No active shift to clock out of
        '401':
          description: unauthorized
  "/profile":
    get:
      summary: show profile
      tags:
      - Profiles
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProfileResponse"
        '404':
          description: user not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
    patch:
      summary: update profile
      tags:
      - Profiles
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                - message
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: array
                    items:
                      type: string
                required:
                - error
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ProfileUpdateRequest"
components:
  schemas:
    Company:
      type: object
      properties:
        id:
          type: integer
          example: 66
        name:
          type: string
          example: Kilback-Walsh
        description:
          type: string
          example: Visionary optimal architecture
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - id
      - name
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        first_name:
          type: string
          example: Mark
        last_name:
          type: string
          example: Batz
        username:
          type: string
          example: frances_bayer
        email:
          type: string
          example: jeffry@purdy.test
        name:
          type: string
          example: Willis Kovacek
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - id
      - first_name
      - last_name
      - username
      - email
    Profile:
      type: object
      properties:
        first_name:
          type: string
          example: Billye
        last_name:
          type: string
          example: Hickle
        username:
          type: string
          example: nathanael.effertz
        email:
          type: string
          example: reina_turcotte@schaefer.test
    AuthenticatedUser:
      type: object
      properties:
        id:
          type: integer
          example: 1
        email:
          type: string
          example: lois@brown-carroll.example
        first_name:
          type: string
          example: Melonie
        last_name:
          type: string
          example: Schulist
        username:
          type: string
          example: rudolph.quigley
      required:
      - id
      - email
    Employment:
      type: object
      properties:
        id:
          type: integer
          example: 87
        user_id:
          type: integer
          example: 71
        position_id:
          type: integer
          example: 91
        start_date:
          type: string
          format: date
          example: '2025-06-02'
        end_date:
          type: string
          format: date
          example: '2025-06-27'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - id
      - user_id
      - position_id
      - start_date
    Position:
      type: object
      properties:
        id:
          type: integer
          example: 89
        title:
          type: string
          example: Global Community-Services Analyst
        description:
          type: string
          example: Intuitive motivating process improvement
        company_id:
          type: integer
          example: 58
        remote:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - id
      - title
      - company_id
    Shift:
      type: object
      properties:
        id:
          type: integer
          example: 49
        employment_id:
          type: integer
          example: 11
        date:
          type: string
          format: date
          example: '2025-05-30'
        start_time:
          type: string
          format: date-time
          example: '2025-06-02 21:48:23 -0400'
        end_time:
          type: string
          format: date-time
          example: '2025-06-06 08:38:23 -0400'
        hours:
          type: number
          format: float
          example: 3.35
        active:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - id
      - employment_id
      - date
      - start_time
    ClockInRequest:
      type: object
      properties:
        employment_id:
          type: integer
          description: ID of the employment to clock in for
      required:
      - id
    ClockOutRequest:
      type: object
      properties:
        employment_id:
          type: integer
          description: ID of the employment to clock out of
      required:
      - id
    UserCreateRequest:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        username:
          type: string
        email:
          type: string
        password:
          type: string
        password_confirmation:
          type: string
      required:
      - first_name
      - last_name
      - username
      - email
      - password
      - password_confirmation
    UserUpdateRequest:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        username:
          type: string
        email:
          type: string
        password:
          type: string
        password_confirmation:
          type: string
      required: []
    LoginResponse:
      type: object
      properties:
        user:
          "$ref": "#/components/schemas/AuthenticatedUser"
      required:
      - user
    CreateComponyRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      required:
      - name
    UpdateCompanyRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      required: []
    ProfileResponse:
      type: object
      properties:
        user:
          allOf:
          - "$ref": "#/components/schemas/User"
          - type: object
            properties:
              employments:
                type: array
                items:
                  allOf:
                  - "$ref": "#/components/schemas/Employment"
                  - type: object
                    properties:
                      position:
                        "$ref": "#/components/schemas/Position"
                      company:
                        "$ref": "#/components/schemas/Company"
                    required:
                    - position
                    - company
            required:
            - employments
      required:
      - user
    ProfileUpdateRequest:
      type: object
      properties:
        profile:
          "$ref": "#/components/schemas/Profile"
      required:
      - profile
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
