---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/sign_in":
    post:
      summary: sign in user
      tags:
      - Authentication
      description: Authenticate user and create session
      parameters: []
      responses:
        '200':
          description: successful authentication
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LoginResponse"
        '401':
          description: invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                    - Invalid email or password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      example: user@example.com
                    password:
                      type: string
                      example: password123
                  required:
                  - email
                  - password
              required:
              - user
  "/sign_out":
    delete:
      summary: sign out user
      tags:
      - Authentication
      description: Destroy user session
      responses:
        '200':
          description: successful logout
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Logged out successfully
  "/":
    get:
      summary: show dashboard
      tags:
      - Dashboard
      description: Retrieve dashboard data including active employments, shifts, total
        weekly hours, and current shifts
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  shifts:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Shift"
                  active_employments:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Employment"
                  total_weekly_hours:
                    type: object
                    description: Object where each key is an employment ID (as a string)
                      and each value is the total hours worked that week (float).
                    additionalProperties:
                      type: number
                      format: float
                      example: 38.5
                  current_shifts:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Shift"
                required:
                - shifts
                - active_employments
                - total_weekly_hours
                - current_shifts
  "/employments/{id}/clock_in":
    post:
      summary: clock in employment
      tags:
      - Employments
      description: Clock in for a specific employment
      parameters:
      - name: id
        in: path
        description: Employment ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful clock in
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Shift"
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: string
                    example: Already clocked in for this employment
        '401':
          description: unauthorized
  "/employments/{id}/clock_out":
    post:
      summary: clock out employment
      tags:
      - Employments
      description: Clock out for a specific employment
      parameters:
      - name: id
        in: path
        description: Employment ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful clock out
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Shift"
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: string
                    example: No active shift to clock out of
        '401':
          description: unauthorized
  "/profile":
    get:
      summary: show profile
      tags:
      - Profiles
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProfileResponse"
        '404':
          description: user not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
components:
  schemas:
    Company:
      type: object
      properties:
        id:
          type: integer
          example: 72
        name:
          type: string
          example: Stamm-Moen
        description:
          type: string
          example: Extended real-time core
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - id
      - name
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        first_name:
          type: string
          example: Treena
        last_name:
          type: string
          example: Cruickshank
        username:
          type: string
          example: joleen
        email:
          type: string
          example: adena_mclaughlin@bosco-bogan.example
        name:
          type: string
          example: Anita Kilback
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - id
      - first_name
      - last_name
      - username
      - email
    AuthenticatedUser:
      type: object
      properties:
        id:
          type: integer
          example: 1
        email:
          type: string
          example: zonia@howell.test
        first_name:
          type: string
          example: Renita
        last_name:
          type: string
          example: Douglas
        username:
          type: string
          example: lianne.nolan
      required:
      - id
      - email
    Employment:
      type: object
      properties:
        id:
          type: integer
          example: 77
        user_id:
          type: integer
          example: 82
        position_id:
          type: integer
          example: 60
        start_date:
          type: string
          format: date
          example: '2025-06-11'
        end_date:
          type: string
          format: date
          example: '2025-07-12'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - id
      - user_id
      - position_id
      - start_date
    Position:
      type: object
      properties:
        id:
          type: integer
          example: 77
        title:
          type: string
          example: Corporate Retail Officer
        description:
          type: string
          example: Extended actuating conglomeration
        company_id:
          type: integer
          example: 34
        remote:
          type: boolean
          example: false
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - id
      - title
      - company_id
    Shift:
      type: object
      properties:
        id:
          type: integer
          example: 97
        employment_id:
          type: integer
          example: 27
        date:
          type: string
          format: date
          example: '2025-06-08'
        start_time:
          type: string
          format: date-time
          example: '2025-06-01 00:44:02 -0400'
        end_time:
          type: string
          format: date-time
          example: '2025-06-02 21:36:33 -0400'
        hours:
          type: number
          format: float
          example: 8.28
        active:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - id
      - employment_id
      - date
      - start_time
    ClockInRequest:
      type: object
      properties:
        employment_id:
          type: integer
          description: ID of the employment to clock in for
      required:
      - id
    ClockOutRequest:
      type: object
      properties:
        employment_id:
          type: integer
          description: ID of the employment to clock out of
      required:
      - id
    UserCreateRequest:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        username:
          type: string
        email:
          type: string
        password:
          type: string
        password_confirmation:
          type: string
      required:
      - first_name
      - last_name
      - username
      - email
      - password
      - password_confirmation
    UserUpdateRequest:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        username:
          type: string
        email:
          type: string
        password:
          type: string
        password_confirmation:
          type: string
      required: []
    LoginResponse:
      type: object
      properties:
        user:
          "$ref": "#/components/schemas/AuthenticatedUser"
      required:
      - user
    CreateComponyRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      required:
      - name
    UpdateCompanyRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      required: []
    ProfileResponse:
      type: object
      properties:
        user:
          allOf:
          - "$ref": "#/components/schemas/User"
          - type: object
            properties:
              employments:
                type: array
                items:
                  allOf:
                  - "$ref": "#/components/schemas/Employment"
                  - type: object
                    properties:
                      position:
                        "$ref": "#/components/schemas/Position"
                      company:
                        "$ref": "#/components/schemas/Company"
                    required:
                    - position
                    - company
            required:
            - employments
      required:
      - user
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
