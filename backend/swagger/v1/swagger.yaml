---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/sign_in":
    post:
      summary: sign in user
      tags:
      - Authentication
      description: Authenticate user and create session
      parameters: []
      responses:
        '200':
          description: successful authentication
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LoginResponse"
        '401':
          description: invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                    - Invalid email or password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      example: user@example.com
                    password:
                      type: string
                      example: password123
                    remember_me:
                      type: boolean
                      example: false
                  required:
                  - email
                  - password
              required:
              - user
  "/sign_out":
    delete:
      summary: sign out user
      tags:
      - Authentication
      description: Destroy user session
      responses:
        '200':
          description: successful logout
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Logged out successfully
  "/":
    get:
      summary: show dashboard
      tags:
      - Dashboard
      description: Retrieve dashboard data including active employments, shifts, total
        weekly hours, daily hours per employment, and current shifts
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  shifts:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Shift"
                  active_employments:
                    type: array
                    items:
                      "$ref": "#/components/schemas/EmploymentWithDetails"
                  total_weekly_hours:
                    type: object
                    description: Object where each key is an employment ID (as a string)
                      and each value is the total hours worked that week (float).
                    additionalProperties:
                      type: number
                      format: float
                      example: 38.5
                  daily_hours:
                    type: object
                    description: Object where each key is a date and employment ID
                      (format "YYYY-MM-DD_EMPLOYMENT_ID") and each value is the total
                      hours worked that day (float).
                    additionalProperties:
                      type: number
                      format: float
                      example: 8.0
                  current_shifts:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Shift"
                required:
                - shifts
                - active_employments
                - total_weekly_hours
                - daily_hours
                - current_shifts
  "/employments":
    get:
      summary: list employments
      tags:
      - Employments
      description: Get all employments for the current user
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Employment"
        '401':
          description: unauthorized
    post:
      summary: create employment
      tags:
      - Employments
      description: Create a new employment
      parameters: []
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Employment"
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EmploymentCreateRequest"
  "/employments/{id}":
    parameters:
    - name: id
      in: path
      description: Employment ID
      required: true
      schema:
        type: string
    get:
      summary: show employment
      tags:
      - Employments
      description: Get a specific employment
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EmploymentResponse"
        '404':
          description: not found
        '401':
          description: unauthorized
    patch:
      summary: update employment
      tags:
      - Employments
      description: Update an employment
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Employment"
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EmploymentUpdateRequest"
    delete:
      summary: delete employment
      tags:
      - Employments
      description: Delete an employment
      responses:
        '204':
          description: no content
        '404':
          description: not found
        '401':
          description: unauthorized
  "/employments/{id}/clock_in":
    post:
      summary: clock in employment
      tags:
      - Employments
      description: Clock in for a specific employment
      parameters:
      - name: id
        in: path
        description: Employment ID
        required: true
        schema:
          type: string
      responses:
        '201':
          description: successful clock in
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Shift"
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
        '401':
          description: unauthorized
  "/employments/{id}/clock_out":
    post:
      summary: clock out employment
      tags:
      - Employments
      description: Clock out for a specific employment
      parameters:
      - name: id
        in: path
        description: Employment ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful clock out
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Shift"
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
        '401':
          description: unauthorized
  "/profile":
    get:
      summary: show profile
      tags:
      - Profiles
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProfileResponse"
        '404':
          description: user not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
    patch:
      summary: update profile
      tags:
      - Profiles
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                - message
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: array
                    items:
                      type: string
                required:
                - error
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ProfileUpdateRequest"
  "/shifts/{id}":
    parameters:
    - name: id
      in: path
      description: Shift ID
      required: true
      schema:
        type: integer
    get:
      summary: show shift
      tags:
      - Shifts
      description: Show a specific shift
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ShiftResponse"
        '404':
          description: not found
        '401':
          description: unauthorized
    patch:
      summary: update shift
      tags:
      - Shifts
      description: Update a shift
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Shift"
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
        '404':
          description: not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shift:
                  type: object
                  properties:
                    date:
                      type: string
                      format: date
                    start_time:
                      type: string
                      format: date-time
                    end_time:
                      type: string
                      format: date-time
                      nullable: true
                    employment_id:
                      type: integer
                    description:
                      type: string
              required:
              - shift
    delete:
      summary: delete shift
      tags:
      - Shifts
      description: Delete a shift
      responses:
        '204':
          description: no content
        '404':
          description: not found
        '401':
          description: unauthorized
components:
  schemas:
    Company:
      type: object
      properties:
        id:
          type: integer
          example: 56
        name:
          type: string
          example: Marvin, Hyatt and Miller
        description:
          type: string
          example: Stand-alone bi-directional ability
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - id
      - name
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        first_name:
          type: string
          example: Odis
        last_name:
          type: string
          example: Lubowitz
        username:
          type: string
          example: eddy_hettinger
          minLength: 3
          maxLength: 20
        email:
          type: string
          format: email
          example: morris.hettinger@hoppe.test
        name:
          type: string
          example: Louvenia Tromp JD
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - id
      - first_name
      - last_name
      - username
      - email
    Profile:
      type: object
      properties:
        first_name:
          type: string
          example: Jake
        last_name:
          type: string
          example: Hickle
        username:
          type: string
          example: jewell
        email:
          type: string
          format: email
          example: fausto@kilback-medhurst.example
    AuthenticatedUser:
      type: object
      properties:
        id:
          type: integer
          example: 1
        email:
          type: string
          format: email
          example: enda@greenfelder.test
        first_name:
          type: string
          example: Doug
        last_name:
          type: string
          example: Fisher
        username:
          type: string
          example: christopher.gorczany
      required:
      - id
      - email
    Employment:
      type: object
      properties:
        id:
          type: integer
          example: 12
        user_id:
          type: integer
          example: 71
        position_id:
          type: integer
          example: 56
        start_date:
          type: string
          format: date
          example: '2025-08-09'
        end_date:
          type: string
          format: date
          nullable: true
          example: '2025-09-17'
        active:
          type: boolean
          example: true
        round_mode:
          type: string
          enum:
          - exact
          - quarter_hour
          - half_hour
          - custom
          description: '0: exact, 1: quarter_hour, 2: half_hour, 3: custom'
          example: exact
        round_interval:
          type: integer
          nullable: true
          description: Rounding interval in minutes, required if round_mode is custom
            (3)
          example: 20
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - id
      - user_id
      - position_id
      - start_date
      - active
    EmploymentWithDetails:
      allOf:
      - "$ref": "#/components/schemas/Employment"
      - type: object
        properties:
          position:
            "$ref": "#/components/schemas/Position"
          company:
            "$ref": "#/components/schemas/Company"
          shifts:
            type: array
            items:
              "$ref": "#/components/schemas/Shift"
        required:
        - position
        - company
    Position:
      type: object
      properties:
        id:
          type: integer
          example: 95
        title:
          type: string
          example: Corporate Real-Estate Administrator
        description:
          type: string
          example: Front-line well-modulated framework
        company_id:
          type: integer
          example: 18
        remote:
          type: boolean
          example: false
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - id
      - title
      - company_id
    Shift:
      type: object
      properties:
        id:
          type: integer
          example: 70
        employment_id:
          type: integer
          example: 16
        date:
          type: string
          format: date
          example: '2025-08-23'
        start_time:
          type: string
          format: date-time
          example: '2025-08-24 08:44:16 -0400'
        end_time:
          type: string
          format: date-time
          nullable: true
          example: '2025-08-27 01:31:57 -0400'
        description:
          type: string
          example: Sunt qui omnis dolorum.
        notes:
          type: string
          example: Qui eos impedit. Aut accusantium qui. Quod hic minus.
        hours:
          type: number
          format: float
          example: 7.36
        active:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - id
      - employment_id
      - date
      - start_time
    ClockInRequest:
      type: object
      properties:
        employment_id:
          type: integer
          description: ID of the employment to clock in for
      required:
      - employment_id
    ClockOutRequest:
      type: object
      properties:
        employment_id:
          type: integer
          description: ID of the employment to clock out of
      required:
      - employment_id
    DashboardResponse:
      type: object
      properties:
        shifts:
          type: array
          items:
            "$ref": "#/components/schemas/Shift"
        active_employments:
          type: array
          items:
            "$ref": "#/components/schemas/EmploymentWithDetails"
        total_weekly_hours:
          type: object
          description: Object where each key is an employment ID (as a string) and
            each value is the total hours worked that week (float).
          additionalProperties:
            type: number
            format: float
            example: 38.5
        current_shifts:
          type: array
          items:
            "$ref": "#/components/schemas/Shift"
      required:
      - shifts
      - active_employments
      - total_weekly_hours
      - current_shifts
    UserCreateRequest:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        password_confirmation:
          type: string
      required:
      - first_name
      - last_name
      - username
      - email
      - password
      - password_confirmation
    UserUpdateRequest:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        password_confirmation:
          type: string
      required: []
    LoginResponse:
      type: object
      properties:
        user:
          "$ref": "#/components/schemas/AuthenticatedUser"
      required:
      - user
    CreateComponyRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      required:
      - name
    UpdateCompanyRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      required: []
    ProfileResponse:
      type: object
      properties:
        user:
          allOf:
          - "$ref": "#/components/schemas/User"
          - type: object
            properties:
              employments:
                type: array
                items:
                  allOf:
                  - "$ref": "#/components/schemas/Employment"
                  - type: object
                    properties:
                      position:
                        "$ref": "#/components/schemas/Position"
                      company:
                        "$ref": "#/components/schemas/Company"
                    required:
                    - position
                    - company
            required:
            - employments
        form_data:
          type: object
          properties:
            companies:
              type: array
              items:
                "$ref": "#/components/schemas/Company"
            positions:
              type: array
              items:
                "$ref": "#/components/schemas/Position"
          required:
          - companies
          - positions
      required:
      - user
      - form_data
    ProfileUpdateRequest:
      type: object
      properties:
        profile:
          "$ref": "#/components/schemas/Profile"
      required:
      - profile
    CompanyAttributes:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      required:
      - name
    PositionAttributes:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        remote:
          type: boolean
        company_attributes:
          "$ref": "#/components/schemas/CompanyAttributes"
      required:
      - title
      - company_attributes
    EmploymentCreateRequest:
      type: object
      properties:
        employment:
          type: object
          properties:
            position_id:
              type: integer
            start_date:
              type: string
              format: date
            end_date:
              type: string
              format: date
              nullable: true
            round_mode:
              type: integer
              description: '0: exact, 1: quarter_hour, 2: half_hour, 3: custom'
              example: 1
            round_interval:
              type: integer
              nullable: true
              description: Rounding interval in minutes, required if round_mode is
                custom (3)
              example: 20
            position_attributes:
              "$ref": "#/components/schemas/PositionAttributes"
          anyOf:
          - required:
            - position_id
            - start_date
          - required:
            - position_attributes
            - start_date
      required:
      - employment
    EmploymentUpdateRequest:
      type: object
      properties:
        employment:
          type: object
          properties:
            position_id:
              type: integer
            start_date:
              type: string
              format: date
            end_date:
              type: string
              format: date
              nullable: true
            round_mode:
              type: integer
              description: '0: exact, 1: quarter_hour, 2: half_hour, 3: custom'
              example: 1
            round_interval:
              type: integer
              nullable: true
              description: Rounding interval in minutes, required if round_mode is
                custom (3)
              example: 20
            position_attributes:
              "$ref": "#/components/schemas/PositionAttributes"
      required:
      - employment
    EmploymentResponse:
      type: object
      properties:
        employment:
          "$ref": "#/components/schemas/EmploymentWithDetails"
      required:
      - employment
    ShiftResponse:
      type: object
      properties:
        shift:
          allOf:
          - "$ref": "#/components/schemas/Shift"
          - type: object
            properties:
              employment:
                "$ref": "#/components/schemas/EmploymentWithDetails"
              hours:
                type: number
                format: float
                example: 8.0
              active:
                type: boolean
                example: true
            required:
            - employment
            - hours
            - active
      required:
      - shift
servers:
- url: http://localhost:3000
  description: Development server
- url: https://hoursapi.dirschn.com
  description: Production server
