/**
 * API V1
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { CompaniesPost422Response } from '../model/models';
import { UserPositionsGet200ResponseInner } from '../model/models';
import { UserPositionsIdGet404Response } from '../model/models';
import { UserPositionsIdPut200Response } from '../model/models';
import { UserPositionsIdPutRequest } from '../model/models';
import { UserPositionsPost201Response } from '../model/models';
import { UserPositionsPostRequest } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface UserPositionsServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * list user positions
     * Retrieve all user positions
     */
    userPositionsGet(extraHttpRequestParams?: any): Observable<Array<UserPositionsGet200ResponseInner>>;

    /**
     * delete user position
     * Delete a user position
     * @param id user position id
     */
    userPositionsIdDelete(id: string, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * show user position
     * Retrieve a specific user position
     * @param id user position id
     */
    userPositionsIdGet(id: string, extraHttpRequestParams?: any): Observable<UserPositionsPost201Response>;

    /**
     * update user position
     * Update a user position
     * @param id user position id
     * @param userPositionsIdPutRequest 
     */
    userPositionsIdPatch(id: string, userPositionsIdPutRequest?: UserPositionsIdPutRequest, extraHttpRequestParams?: any): Observable<UserPositionsIdPut200Response>;

    /**
     * update user position
     * Update a user position (PUT)
     * @param id user position id
     * @param userPositionsIdPutRequest 
     */
    userPositionsIdPut(id: string, userPositionsIdPutRequest?: UserPositionsIdPutRequest, extraHttpRequestParams?: any): Observable<UserPositionsIdPut200Response>;

    /**
     * create user position
     * Create a new user position
     * @param userPositionsPostRequest 
     */
    userPositionsPost(userPositionsPostRequest?: UserPositionsPostRequest, extraHttpRequestParams?: any): Observable<UserPositionsPost201Response>;

}
