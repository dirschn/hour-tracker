/**
 * API V1
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { Employment } from '../model/models';
import { EmploymentCreateRequest } from '../model/models';
import { EmploymentResponse } from '../model/models';
import { EmploymentUpdateRequest } from '../model/models';
import { EmploymentsPost422Response } from '../model/models';
import { Shift } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface EmploymentsServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * list employments
     * Get all employments for the current user
     */
    employmentsGet(extraHttpRequestParams?: any): Observable<Array<Employment>>;

    /**
     * clock in employment
     * Clock in for a specific employment
     * @param id Employment ID
     */
    employmentsIdClockInPost(id: string, extraHttpRequestParams?: any): Observable<Shift>;

    /**
     * clock out employment
     * Clock out for a specific employment
     * @param id Employment ID
     */
    employmentsIdClockOutPost(id: string, extraHttpRequestParams?: any): Observable<Shift>;

    /**
     * delete employment
     * Delete an employment
     * @param id Employment ID
     */
    employmentsIdDelete(id: string, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * show employment
     * Get a specific employment
     * @param id Employment ID
     */
    employmentsIdGet(id: string, extraHttpRequestParams?: any): Observable<EmploymentResponse>;

    /**
     * update employment
     * Update an employment
     * @param id Employment ID
     * @param employmentUpdateRequest 
     */
    employmentsIdPatch(id: string, employmentUpdateRequest?: EmploymentUpdateRequest, extraHttpRequestParams?: any): Observable<Employment>;

    /**
     * create employment
     * Create a new employment
     * @param employmentCreateRequest 
     */
    employmentsPost(employmentCreateRequest?: EmploymentCreateRequest, extraHttpRequestParams?: any): Observable<Employment>;

}
